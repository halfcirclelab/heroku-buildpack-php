#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config
MCRYPT_VERSION="2.5.8"
APACHE_VERSION="2.2.25"
APACHE_PATH="apache"
PHP_VERSION="5.3.27"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

echo ""
echo "=----."
echo "     .      BIN_DIR: $BIN_DIR"
echo "     .    BUILD_DIR: $BUILD_DIR"
echo "     :   APACHE_DIR: $CACHE_DIR"
echo "     :       LP_DIR: $LP_DIR"
echo "     |"
echo "     ^--------------------------=oO@"
echo ""

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

MCRYPT_URL="http://om-dev.s3.amazonaws.com/mcrypt-""$MCRYPT_VERSION"".tar.gz"
echo "-----> Bundling mcrypt from $MCRYPT_URL"
curl --silent --max-time 60 --location "$MCRYPT_URL" | tar xz

APACHE_URL="http://om-dev.s3.amazonaws.com/apache-""$APACHE_VERSION"".tar.gz"
echo "-----> Bundling Apache from $APACHE_URL"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="http://om-dev.s3.amazonaws.com/php-""$PHP_VERSION"".tar.gz"
echo "-----> Bundling PHP from $PHP_URL"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/lib/php
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR

# Migrate latest database via Yii
chmod +x ~/app/www/deploy.sh
~/app/www/deploy.sh

# WIN
echo ""
echo "  |               000   000                "
echo "0/                 000   000               "
echo "00                  00    00               "
echo "00                  00    00               "
echo "00                  00    00               "
echo "00 /000     /000    00    00       /000    "
echo "00/ 000    / 000  | 00    00      / 0000 | "
echo "00   000  /   000/  00    00     00  000/  "
echo "00    00 00    00   00    00    0000       "
echo "00    00 00    00   00    00      000      "
echo "00    00 00    00   00    00        000    "
echo "00    00 00    00   00    00          000  "
echo "00    /0 00    /0   00    00     /000  00  "
echo " 0000/    0000/ 00  000 | 000 | | 0000 /   "
echo "  000      000   00  00/   00/     000/    "
echo ""